{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.b5346d2e.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport {PropTypes} from 'prop-types';\nimport { getFunName } from '../helpers';\n\n\nclass StorePicker extends React.Component {\n    \n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = (event) => {\n        // Stop form from submitting\n        event.preventDefault();\n        // get the text from that input\n        const storeName = this.myInput.current.value;\n        // Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n\n        \n    }\n\n    render() {\n        return (\n\n\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n\n                <h2>Please enter a Store</h2>\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()} />\n                <button type=\"submit\">Visit Store</button>\n\n            </form>\n\n        \n        \n\n        );\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport {PropTypes} from 'prop-types';\n\nconst Header = props => (\n\n    <header className=\"top\">\n                <h1>Catch \n                    <span className=\"ofThe\">\n                        <span className=\"of\">Of</span>\n                        <span className=\"the\">The</span>\n                    </span>\n                    Day\n                </h1>\n\n                <h3 className=\"tagline\">\n                    <span>{props.tagline}</span>\n                </h3>\n\n            </header>\n\n\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n    \n            \n\n\nexport default Header;","import React from 'react';\nimport {PropTypes} from 'prop-types';\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    \n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    };\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter: 500, exit: 500 }\n        };\n        \n        // Make sure the fish is loaded befoe we continue!\n        if (!fish) return null;\n        if(!isAvailable) {\n            return (\n                \n                <CSSTransition {...transitionOptions}>\n\n                    <li key={key}>\n                    Sorry {fish ? fish.name : 'fish' } is no longer available.\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return ( \n            <CSSTransition {...transitionOptions}> \n            <li key={key}>\n                <TransitionGroup component=\"span\" className=\"count\">\n\n                    <CSSTransition classNames=\"count\" key={count} timeout={{enter:5000, exit:5000}}>\n                        <span>{count}</span>\n                    </CSSTransition>\n                \n                </TransitionGroup>\n                lbs {fish.name}\n                {formatPrice(count * fish.price)}\n                <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n            </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            \n            <div className=\"order\">\n                <h2>Order</h2>\n                <TransitionGroup component='ul' className=\"order\">\n\n                    {orderIds.map(this.renderOrder)}                 \n                </TransitionGroup>\n                \n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n            \n\n\n        );\n\n    }\n\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport {PropTypes} from 'prop-types';\n\nclass AddFishForm extends Component {\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static  propTypes = {\n        addFish: PropTypes.func\n    };\n    \n    createFish = (event) => {\n        // Stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n\n        this.props.addFish(fish);\n        //refresh the form\n        event.currentTarget.reset();\n    };\n\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} type=\"text\" placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\"> + Add Fish </button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport {PropTypes} from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    }\n\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        //Update that fish\n        // Take a copy of the current fish\n        const updatedFish = { \n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavaiable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc}></textarea>\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport {PropTypes} from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n            Login With Github\n        </button>\n\n        <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n            Login With Facebook\n        </button>\n\n        <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n            Login With Twitter\n        </button>\n\n\n\n    </nav>\n\n\n);\n\nLogin.propTypes = {\n\n    authenticate: PropTypes.func.isRequired\n\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n\n    apiKey: \"AIzaSyDENM0sr9Q1HtV5hTBJnpgZBrSpigrosPA\",\n    authDomain: \"catch-of-the-day-lee-roberts.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-lee-roberts.firebaseio.com\",\n    \n\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;","import React from 'react';\nimport {PropTypes} from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged( user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // Claim it if there is no owner\n        if (!store.owner) {\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        // Set the state of the inventory componennt to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n        \n    };\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log('Logging Out!');\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n\n        const logout = <button onClick={this.logout}>Log Out!</button>\n\n        // Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />\n        }\n\n\n        // Check if they are not the owener of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // The must be the owner, just render the inventory\n\n        \n\n        return (\n            \n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key}\n                        index={key} \n                        fish={this.props.fishes[key]} \n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish} />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n            \n\n\n        );\n\n    }\n\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport {PropTypes} from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n\n    render() {\n        //ES6 Destructuring\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Cart' : 'Sold Out!'}</button>\n\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport {PropTypes} from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport base from '../base';\n\nclass App extends React.Component {\n\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localstorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef)})\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    addFish = (fish) => {\n        // Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        //Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // Set the new fishes object to state\n        this.setState({ fishes });\n        \n    }\n\n    updateFish = (key, updateFish) => {\n        // Take a copy of a current state\n        const fishes = { ...this.state.fishes };\n\n        // Update that state\n        fishes[key] = updateFish;\n\n        //Set that to state\n        this.setState( { fishes });\n    };  \n\n    deleteFish = (key) => {\n        // take a copy of state\n        const fishes = { ...this.state.fishes };\n        // update the state\n        fishes[key] = null;\n        // update state\n        this.setState({ fishes });\n    }\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        //Take a copy of state\n        const order = { ...this.state.order };\n        // Either add to the order or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // Call setState to update our state object\n        this.setState({ order });\n    }\n\n    removeFromOrder = key => {\n        //Take a copy of state\n        const order = { ...this.state.order };\n        // remove item from order\n        delete order[key]; \n        // Call setState to update our state object\n        this.setState({ order });\n    }\n\n\n\n    render() {\n\n        return (\n            <div className='catch-of-the-day'>\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish key={key}\n                                index={key} \n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder} />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish} \n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n                \n\n            </div>\n        )\n\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n\n    <div>\n        <h2> Not Found!!!!!!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n)\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css'\n\nrender(<Router />, document.querySelector('#main'));\n\n\n"],"sourceRoot":""}